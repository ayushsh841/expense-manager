{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15fc0ca4.chunk.js","sourcesContent":["import './Card.css'\r\n\r\nconst Card = props => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = props => {\r\n    const month = props.date.toLocaleString('en-us', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-us', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = props => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\n\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n  if (props.items.length === 0) {\r\n    return (<h2 className='expenses-list__fallback'>Found no expenses.</h2>);\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler} >\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value/props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className=\"chart-bar__inner\">\r\n        <div \r\n          className='chart-bar__fill' \r\n          style={{height:barFillHeight}}>\r\n        </div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\n\r\nimport './Chart.css';\r\n\r\nconst Chart = props => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map(dataPoint => {\r\n        return (\r\n          <ChartBar \r\n            key={dataPoint.label}\r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum} \r\n            label={dataPoint.label}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = props => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nimport './Expenses.css';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter onChangeFilter={filterChangeHandler} selected={filteredYear} />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: '',\r\n  //     enteredAmount: '',\r\n  //     enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = event => {\r\n    // setUserInput(prevState => {\r\n    //     return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = event => {\r\n    // setUserInput(prevState => {\r\n    //     return { ...prevState, enteredAmount: event.target.value };\r\n    // });\r\n\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = event => {\r\n    // setUserInput(prevState => {\r\n    //     return { ...prevState, enteredDate: event.target.value };\r\n    // });\r\n\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler} />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = props => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = enteredExpenseData => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Card className='new-expense'>\r\n      {!isEditing && \r\n        <button onClick={startEditingHandler}>Add New Expense</button> }\r\n      {isEditing && \r\n        <ExpenseForm\r\n         onSaveExpenseData={saveExpenseDataHandler} \r\n         onCancel={stopEditingHandler} \r\n        />\r\n      }\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  { id: 'e1', title: 'Car Insurance', amount: 294.67, date: new Date(2022, 2, 28) },\n  { id: 'e2', title: 'Playstation', amount: 500, date: new Date(2021, 4, 1) },\n  { id: 'e3', title: 'Phone', amount: 399, date: new Date(2021, 4, 13) },\n  { id: 'e4', title: 'Home Decor', amount: 99.99, date: new Date(2020, 1, 13) },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses expenses={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}